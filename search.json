[{"path":"https://docs.ropensci.org/naijR/CONTRIBUTING.html","id":"feedbackcontribution","dir":"","previous_headings":"","what":"Feedback/Contribution","title":"NA","text":"Contributions welcome pull requests R code documentation gladly entertained. bug reports feature requests, kindly submit issue. Please note package released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://docs.ropensci.org/naijR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://docs.ropensci.org/naijR/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://docs.ropensci.org/naijR/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://docs.ropensci.org/naijR/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://docs.ropensci.org/naijR/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://docs.ropensci.org/naijR/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://docs.ropensci.org/naijR/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://docs.ropensci.org/naijR/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://docs.ropensci.org/naijR/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://docs.ropensci.org/naijR/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://docs.ropensci.org/naijR/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://docs.ropensci.org/naijR/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://docs.ropensci.org/naijR/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://docs.ropensci.org/naijR/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://docs.ropensci.org/naijR/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://docs.ropensci.org/naijR/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://docs.ropensci.org/naijR/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://docs.ropensci.org/naijR/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://docs.ropensci.org/naijR/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://docs.ropensci.org/naijR/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://docs.ropensci.org/naijR/articles/interactive.html","id":"motivation","dir":"Articles","previous_headings":"","what":"Motivation","title":"Approach to Correcting Misspelt Local Government Areas","text":"Nigeria 774 Local Government Areas (LGAs). number factors can make working challenging: LGAs share name respective States e.g. Bauchi LGA Bauchi State, can lead wrong application data. LGAs bear name although different States, e.g. Obi LGA Benue Nasarawa States. LGA spelling discrepancies rife literature, believe , even official government documents.","code":""},{"path":"https://docs.ropensci.org/naijR/articles/interactive.html","id":"a-proposed-solution","dir":"Articles","previous_headings":"","what":"A proposed solution","title":"Approach to Correcting Misspelt Local Government Areas","text":"function fix_region methods designed address spelling errors LGAs1. fixes can carried 3 incremental phases; user effect corrections particular level s/can proceed next stage. phases follows: Automatic Interactive Manual","code":""},{"path":"https://docs.ropensci.org/naijR/articles/interactive.html","id":"automatic-fixes","dir":"Articles","previous_headings":"A proposed solution","what":"1. Automatic fixes","title":"Approach to Correcting Misspelt Local Government Areas","text":"spelling error slight unambiguous, function automatically effects repair. However, single misspelt LGA, especially supplied string, fix_region signal error. thinking automated solution may necessary single value probably provided interactively. another LGA added, argument passed function character vector one element: Sometimes use character vector perform check, function fix_region may find difficult decide fixes apply. instances, best thing convert vector lgas object. Note constructor lgas(), default, signals warning vector supplying misspelt LGAs. However, avoid unnecessary verbosity whilst attempting fix, warning suppressed lgas() nested fix_region(). spelling mistakes depart far available LGA spellings, user shown message stating fixes applied. now carry fix, one can proceed next stage.","code":"library(naijR)  fix_region(\"Legos Island\") #> Error in `fix_region()`: #> ! Incorrect region name(s); consider reconstructing 'x' with `states()` #>   or `lgas()` for a more reliable fix fix_region(c(\"Legos Island\", \"Amuwo-Odofin\")) #> ℹ Successful fix(es): #> ------------------- #> * Legos Island => Lagos Island chars <- c(\"Legos Island\", \"Amuwo Odofin\") fix_region(chars) #> Error in `fix_region()`: #> ! Incorrect region name(s); consider reconstructing 'x' with `states()` #>   or `lgas()` for a more reliable fix  # Create an `lgas` object lgs <- lgas(c(\"Legos Island\", \"Amuwo Odofin\")) #> Warning: One or more items is not an LGA. Spelling error? fix_region(lgs) #> ℹ Successful fix(es): #> ------------------- #> * Legos Island => Lagos Island #> * Amuwo Odofin => Amuwo-Odofin #> [1] \"Lagos Island\" \"Amuwo-Odofin\" #> attr(,\"misspelt\") #> character(0) #> attr(,\"regions.fixed\") #>   Legos Island   Amuwo Odofin  #> \"Lagos Island\" \"Amuwo-Odofin\" fix_region(lgas(c(\"Legos Island\", \"Amuwo Odofin\"))) #> ℹ Successful fix(es): #> ------------------- #> * Legos Island => Lagos Island #> * Amuwo Odofin => Amuwo-Odofin #> [1] \"Lagos Island\" \"Amuwo-Odofin\" #> attr(,\"misspelt\") #> character(0) #> attr(,\"regions.fixed\") #>   Legos Island   Amuwo Odofin  #> \"Lagos Island\" \"Amuwo-Odofin\" fix_region(lgas(c(\"Orange County\", \"Amuwo Odofin\"))) #> ℹ Successful fix(es): #> ------------------- #> * Amuwo Odofin => Amuwo-Odofin #>  #> Fix(es) not applied: #> -------------------- #> * Orange County #> [1] \"Orange County\" \"Amuwo-Odofin\"  #> attr(,\"misspelt\") #> [1] \"Orange County\" #> attr(,\"regions.fixed\") #>   Amuwo Odofin  #> \"Amuwo-Odofin\""},{"path":"https://docs.ropensci.org/naijR/articles/interactive.html","id":"interactive-fixes","dir":"Articles","previous_headings":"A proposed solution","what":"2. Interactive fixes","title":"Approach to Correcting Misspelt Local Government Areas","text":"automatic fix feasible, user option interactively calling fix_region setting interactive argument TRUE. following prompts, misspelt LGA well possible replacements presented. user needs select desired replacement value. particularly useful user sure correct spelling might . misspelt LGA one match, interactive approach viable option effecting fixes. example , mispelt LGAs fixed automatically: see string ‘Machika’ actual LGA one possible candidate LGA considered possible replacement. original intent use “Michika LGA”. address mistake, can run fix_region interactively. Note interactive option available use objects class lgas. Next, user provided prompt provide search item likely LGAs appropriate replacement misspelt one. Possible replacements presented select value, appropriate number entered prompt. option RETRY allows user restart query provide another search term, SKIP try different misspelt item (one) QUIT exit prompt. Windows machines, user can use native dialog boxes setting graphic TRUE.","code":"mispelt.adamawa <- c(\"Fufure\", \"Demsa\", \"Machika\", \"Fufure\", \"Ganye\", \"Hong\")  # check for misspelt LGAs and, if necessary, attempt to fix length(mispelt.adamawa) #> [1] 6 sum(is_lga(mispelt.adamawa)) #> [1] 3 corrected.adamawa <- fix_region(mispelt.adamawa) #> 'Machika' approximately matched more than one region - Michika, Machina #> ℹ Successful fix(es): #> ------------------- #> * Fufure => Fufore #>  #> Fix(es) not applied: #> -------------------- #> * Machika sum(is_lga(corrected.adamawa)) #> [1] 5 adamawa <- fix_region(lgas(corrected.adamawa), interactive = TRUE) # Confirm that the spelling mistakes have been fixed. all(is_lga(adamawa)) #> [1] TRUE"},{"path":"https://docs.ropensci.org/naijR/articles/interactive.html","id":"manual-fixes","dir":"Articles","previous_headings":"A proposed solution","what":"3. Manual fixes","title":"Approach to Correcting Misspelt Local Government Areas","text":"spelling errors identified correct one already known, manual fix can applied. , use function fix_region_manual use straightforward2:","code":"adamawa <- fix_region_manual(corrected.adamawa,                              wrong = \"Machika\",                              correct = \"Michika\") adamawa #> [1] \"Fufore\"  \"Demsa\"   \"Michika\" \"Fufore\"  \"Ganye\"   \"Hong\""},{"path":"https://docs.ropensci.org/naijR/articles/nigeria-maps.html","id":"choropleth-maps","dir":"Articles","previous_headings":"","what":"Choropleth maps","title":"nigeria-maps","text":"Choropleth maps display differences among regions can also created map_ng. number ways can done, depending kind arguments supplied function: data frame containing column regions least one data displayed, atomic vector regions another data displayed. map built categorical data (.e. factors); atomic vectors coercible class also accepted. case numeric data, notably type double, can coaxed categories class boundaries provided via breaks argument. demonstrate , create data frame meaningless data:","code":"# Create variables ss <- states() numStates <- length(ss) vv <- sample(LETTERS[1:5], numStates, TRUE)  # Create a data frame and view top rows dd <- data.frame(state = ss, letter = vv) head(dd) #>       state letter #> 1      Abia      E #> 2   Adamawa      D #> 3 Akwa Ibom      E #> 4   Anambra      D #> 5    Bauchi      A #> 6   Bayelsa      E"},{"path":"https://docs.ropensci.org/naijR/articles/nigeria-maps.html","id":"using-a-data-frame","dir":"Articles","previous_headings":"Choropleth maps","what":"Using a data frame","title":"nigeria-maps","text":"easiest way draw choropleth map pass two-column data frame data argument. Thus data frame columns, trivial subset extract 2 columns interest. Continuing example,  Note following: argument var name column data frame variable mapped. found via mechanism called quasiquotation; explore see ?rlang::quasiquotation. colours darken sequentially E follows natural (alphabetical) ordering factor levels (.e. category labels). control order upfront, create ordered factor using various ways available R. (See ?ordered) variable var actually character vector, internally converted factor.","code":"map_ng(data = dd)"},{"path":"https://docs.ropensci.org/naijR/articles/nigeria-maps.html","id":"using-atomic-vectors","dir":"Articles","previous_headings":"Choropleth maps","what":"Using atomic vectors","title":"nigeria-maps","text":"can use data make map, different coding approach:  ’s exactly map , time, used 2 vectors provide data – one regions (case 36 States FCT) another categorization. also introduced colouring col argument. Although data, try use column name dd, error.","code":"map_ng(region = states(), x = vv, col = \"red\", show.text = FALSE) map_ng(region = states(), x = var) #> Error in `.prep_choropleth_opts()`: #> ! One or more inputs for generating choropleth options are invalid"},{"path":"https://docs.ropensci.org/naijR/articles/nigeria-maps.html","id":"numerical-values","dir":"Articles","previous_headings":"Choropleth maps","what":"Numerical values","title":"nigeria-maps","text":"data categorized numeric vectors, categories defined. achieve , breaks argument supplied. numeric vector describes class limits grouping values. number classes length(breaks) - 1.  get meaningful interpretable legend, use categories argument.  Note various colour arguments used, kind cryptic. details use colouring schemes, check help page ?map_ng.","code":"nn <- runif(numStates, max = 100)  # random real numbers ranging from 0 - 100 bb <- c(0, 40, 60, 100)  map_ng(   region = states(),   x = nn,   breaks = bb,   col = 'YlOrRd',   show.text = FALSE ) map_ng(   region = states(),   x = nn,   breaks = bb,   categories = c(\"Low\", \"Medium\", \"High\"),   col = 3L,    show.text = FALSE )"},{"path":"https://docs.ropensci.org/naijR/articles/nigeria-maps.html","id":"mapping-of-point-data","dir":"Articles","previous_headings":"","what":"Mapping of point data","title":"nigeria-maps","text":"show distribution point data maps GIS location data, different set arguments employed. Since point data requires pair coordinates accurate, x y arguments MUST provided. function receives coordinates, either separate atomic vectors columns data frame, map_ng defaults mapping points within boundaries indicated region. looks like :  function map_ng carries bounds check point data returns error, points plotted, coordinates beyond region. instance, using points provided earlier, try plot map Kwara State,","code":"x <- c(3.000, 4.000, 6.000, 5.993, 5.444, 6.345, 5.744) y <- c(8.000, 9.000, 9.300, 10.432, 8.472, 6.889, 9.654)  map_ng(\"Nigeria\", x = x, y = y) map_ng(\"Kwara\", x = x, y = y) #> Error in `map_ng()`: #> ! Coordinates are beyond the bounds of the plotted area"},{"path":"https://docs.ropensci.org/naijR/articles/nigeria-maps.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"nigeria-maps","text":"vignette provided initial look mapping facilities currently available naijR package. Additional development going provide user granular control, well make maps extendible established geospatial R packages.","code":""},{"path":"https://docs.ropensci.org/naijR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Victor Ordu. Author, maintainer. Laura DeCicco. Contributor. Emily Riederer. Reviewer. Margaret Siple. Reviewer. Cagri Alican. Reviewer.","code":""},{"path":"https://docs.ropensci.org/naijR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ordu V (2024). naijR: Operations Ease Data Analyses Specific Nigeria. R package version 0.6.1, https://docs.ropensci.org/naijR/.","code":"@Manual{,   title = {naijR: Operations to Ease Data Analyses Specific to Nigeria},   author = {Victor Ordu},   year = {2024},   note = {R package version 0.6.1},   url = {https://docs.ropensci.org/naijR/}, }"},{"path":"https://docs.ropensci.org/naijR/index.html","id":"naijr-an-r-package-on-nigeria-and-for-nigeria-","dir":"","previous_headings":"","what":"An R package with functions to ease data analyses specific to Nigeria","title":"An R package with functions to ease data analyses specific to Nigeria","text":"naijR R package contains suite functions make easier deal data datasets country Nigeria constituent parts. Inspiration project drawn experience within real data science projects peculiar problems often encountered, : Data cleaning: dealing data specific county, data entry issues seem occur quite frequently. Rather applying repetitious data cleaning tasks, better encapsulate way automate . Data point ambiguity: Although key data standardized relevant authorities e.g. names administrative divisions like Local Government Areas, still common find bodies data points used arbitrarily incorrectly. Dependence idiosyncratic tools: Many organisations Nigeria defer use tools add layer complexity data management without due cognisance taken peculiarities associated local data sets. naijR brings approach data analysis tailored towards enhance productivity anyone working data Nigeria.","code":""},{"path":"https://docs.ropensci.org/naijR/index.html","id":"things-that-naijr-can-do","dir":"","previous_headings":"","what":"Things that naijR can do","title":"An R package with functions to ease data analyses specific to Nigeria","text":"number things one can package. include: List States Nigerian Federation group geo-political zones. List Local Government Areas, either whole States. Check data structure contains administrative division. version, States supported. Fix incorrectly entered mobile numbers. Draw maps Nigeria using vector graphics, including choropleth maps State level. Additional functionality added available future releases.","code":""},{"path":"https://docs.ropensci.org/naijR/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting Started","title":"An R package with functions to ease data analyses specific to Nigeria","text":"easiest way start using package within active R session running install stable version CRAN. work development version package, can installed GitHub introduction package’s ability draw Nigeria country maps, read article","code":"install.packages('naijR') # install.packages('remotes') remotes::install_github(\"BroVic/naijR\")"},{"path":"https://docs.ropensci.org/naijR/reference/disambiguate_lga.html","id":null,"dir":"Reference","previous_headings":"","what":"Disambiguate Synonymous States and LGAs — disambiguate_lga","title":"Disambiguate Synonymous States and LGAs — disambiguate_lga","text":"LGAs Nigeria bear name States belong . function apply attribute LGA distinguish State.","code":""},{"path":"https://docs.ropensci.org/naijR/reference/disambiguate_lga.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Disambiguate Synonymous States and LGAs — disambiguate_lga","text":"","code":"disambiguate_lga(lga, state = NULL, ...)"},{"path":"https://docs.ropensci.org/naijR/reference/disambiguate_lga.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Disambiguate Synonymous States and LGAs — disambiguate_lga","text":"lga object class lgas length 1L. state name State LGA belong . ... Arguments passed menu.","code":""},{"path":"https://docs.ropensci.org/naijR/reference/disambiguate_lga.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Disambiguate Synonymous States and LGAs — disambiguate_lga","text":"object class lgas (possibly) modified State attribute.","code":""},{"path":"https://docs.ropensci.org/naijR/reference/disambiguate_lga.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Disambiguate Synonymous States and LGAs — disambiguate_lga","text":"state, provided user, interactive prompt presented user select appropriate state - interactive sessions; run batch command, function signal error.","code":""},{"path":"https://docs.ropensci.org/naijR/reference/disambiguate_lga.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Disambiguate Synonymous States and LGAs — disambiguate_lga","text":"","code":"obi.lga <- lgas(\"Obi\")    # Warning #> Warning: 'Obi' LGA is found in 2 States: Benue, Nasarawa try(map_ng(obi.lga))      # Error #> Error in plot_sf(x, ...) :  #>   NA value(s) in bounding box. Trying to plot empty geometries?  obi.benue <- disambiguate_lga(obi.lga, \"Benue\")  if (interactive())   map_ng(obi.benue)"},{"path":"https://docs.ropensci.org/naijR/reference/fix_mobile.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix mobile numbers — fix_mobile","title":"Fix mobile numbers — fix_mobile","text":"Fixes local mobile phone numbers uniform text format.","code":""},{"path":"https://docs.ropensci.org/naijR/reference/fix_mobile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix mobile numbers — fix_mobile","text":"","code":"fix_mobile(x)"},{"path":"https://docs.ropensci.org/naijR/reference/fix_mobile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix mobile numbers — fix_mobile","text":"x character vector numerical strings.","code":""},{"path":"https://docs.ropensci.org/naijR/reference/fix_mobile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix mobile numbers — fix_mobile","text":"updated vector, usually column data frame.","code":""},{"path":"https://docs.ropensci.org/naijR/reference/fix_mobile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fix mobile numbers — fix_mobile","text":"format specific used given location - now function useful Nigeria mobile numbers, come format expressed regex pattern \"^0[7-9][0-1][0-9]{8}$\".","code":""},{"path":"https://docs.ropensci.org/naijR/reference/fix_mobile.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Fix mobile numbers — fix_mobile","text":"option producing warnings mobile number entries may removed vector, setting option verbose TRUE.","code":""},{"path":"https://docs.ropensci.org/naijR/reference/fix_mobile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fix mobile numbers — fix_mobile","text":"","code":"fix_mobile(\"803-123-4567\")    # Adds leading '0\" and removes separators #> [1] \"08031234567\""},{"path":"https://docs.ropensci.org/naijR/reference/fix_region.html","id":null,"dir":"Reference","previous_headings":"","what":"Fix Misspelling of Adminstrative Regions — fix_region","title":"Fix Misspelling of Adminstrative Regions — fix_region","text":"Correct misspelt names administrative regions e.g. States LGAs.","code":""},{"path":"https://docs.ropensci.org/naijR/reference/fix_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fix Misspelling of Adminstrative Regions — fix_region","text":"","code":"fix_region(x, ...)  # S3 method for class 'states' fix_region(x, ...)  # S3 method for class 'lgas' fix_region(x, interactive = FALSE, quietly = FALSE, graphic = FALSE, ...)  # Default S3 method fix_region(x, ...)  fix_region_manual(x, wrong, correct)"},{"path":"https://docs.ropensci.org/naijR/reference/fix_region.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fix Misspelling of Adminstrative Regions — fix_region","text":"x S3 object class states lgas. fix_region.default, character vector (object coercible one) can passed 'States' interpretable. ... Arguments passed methods. interactive Logical. TRUE, function prompts user interactively select correct LGA names list available options. quietly Logical; default argument FALSE. graphic Whether make use native GUI elements (Windows ). wrong misspelt element(s) x. correct correction applied misspelt element(s)","code":""},{"path":"https://docs.ropensci.org/naijR/reference/fix_region.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fix Misspelling of Adminstrative Regions — fix_region","text":"transformed object. names correct, object returned unchanged.","code":""},{"path":"https://docs.ropensci.org/naijR/reference/fix_region.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fix Misspelling of Adminstrative Regions — fix_region","text":"fix_region look character vector try determine State LGA names wrongly entered. presupposes atomic vector type character. test missing values vector, leaving untouched. fix_region_manual allows users interactively directly change update spelling.","code":""},{"path":"https://docs.ropensci.org/naijR/reference/fix_region.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Fix Misspelling of Adminstrative Regions — fix_region","text":"passed character vector length 1L, case misspelt LGA, function signals error; presumption fix can readily applied interactively. items provided misspelt, nothing happens, user advised use appropriate constructor function improve accuracy repairs. mix misspelt properly spelt LGAs, functionalities fixing mistakes available via mode interactive.","code":""},{"path":"https://docs.ropensci.org/naijR/reference/fix_region.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fix Misspelling of Adminstrative Regions — fix_region","text":"","code":"try(fix_region(\"Owerri north\")) # ERROR #> Error in fix_region(\"Owerri north\") :  #>   Incorrect region name(s); consider reconstructing 'x' with `states()` or #> `lgas()` for a more reliable fix fix_region(c(\"Owerri north\", \"Owerri West\"))  x <- c(\"Pankshen\", \"Pankshin\", \"Q'uan Pam\") is_lga(x) #> [1] FALSE  TRUE FALSE x <- fix_region(x, quietly = TRUE) is_lga(x) #> [1]  TRUE  TRUE FALSE fix_region_manual(x, \"Q'uan Pam\", \"Qua'an Pan\") #> [1] \"Pankshin\"   \"Pankshin\"   \"Qua'an Pan\" all(is_lga(x)) #> [1] FALSE"},{"path":"https://docs.ropensci.org/naijR/reference/lgas.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects for Representing the Local Government Areas (LGAs) of Nigeria — lgas","title":"Objects for Representing the Local Government Areas (LGAs) of Nigeria — lgas","text":"Objects Representing Local Government Areas (LGAs) Nigeria","code":""},{"path":"https://docs.ropensci.org/naijR/reference/lgas.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Objects for Representing the Local Government Areas (LGAs) of Nigeria — lgas","text":"","code":"lgas(region = NA_character_, strict = FALSE, warn = TRUE)  is_lga(x)  as_lga(x)  # S3 method for class 'lgas' print(x, ...)  # S3 method for class 'lgas' c(...)  # S3 method for class 'lgas' x[[i, exact = TRUE]]  # S3 method for class 'lgas' x[i]  # S3 method for class 'lgas' na.exclude(object, ...)"},{"path":"https://docs.ropensci.org/naijR/reference/lgas.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Objects for Representing the Local Government Areas (LGAs) of Nigeria — lgas","text":"region Context-dependent. Either State(s) Federation Local Government Area(s) - internal checks performed determine applies. cases States synonymous LGAs, default behaviour use State basis selecting LGAs. can modified strict. default value NA_character_ return 774 LGAs. strict logical; event name clash State/LGA, return specified LGA argument set TRUE. warn logical; issue warning one elements actually Local Government Areas (misspelt). x object type character. includes higher dimension object classes like matrix array. as_lga, string representing Local Government Area shares name one States. ... Arguments used methods. See documentation generic details. , exact See help file ?Extract object object class regions","code":""},{"path":"https://docs.ropensci.org/naijR/reference/lgas.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Objects for Representing the Local Government Areas (LGAs) of Nigeria — lgas","text":"length ng.state == 1L, character vector containing names Local Government Areas; otherwise named list, whose elements character vectors LGAs state. is_lga returms vector length input object (element valid Local Government Area evaluate FALSE); as_lga, object class lgas.","code":""},{"path":"https://docs.ropensci.org/naijR/reference/lgas.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Objects for Representing the Local Government Areas (LGAs) of Nigeria — lgas","text":"six (6) LGAs share names State - Bauchi, Ebonyi, Gombe, Katsina, Kogi Ekiti.","code":""},{"path":"https://docs.ropensci.org/naijR/reference/lgas.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Objects for Representing the Local Government Areas (LGAs) of Nigeria — lgas","text":"","code":"how_many_lgas <- function(state) {   require(naijR)   stopifnot(all(is_state(state)))   cat(sprintf(\"No. of LGAs in %s State:\", state),     length(lgas(state)),     fill = TRUE) } how_many_lgas(\"Sokoto\") #> No. of LGAs in Sokoto State: 23 how_many_lgas(\"Ekiti\") #> No. of LGAs in Ekiti State: 16 is_lga(c(\"Pankshen\", \"Pankshin\")) #> [1] FALSE  TRUE  # With coercion kt.st <- states(\"Katsina\")  # Ensure this is a State, not an LGA. kt.lg <- suppressWarnings(as_lga(kt.st)) is_state(kt.st)             # TRUE #> [1] TRUE is_lga(kt.lg)               # TRUE #> [1] TRUE  ## Where there's no ambiguity, it doesn't make sense to coerce ## This kind of operation ends with an error if (FALSE) { # \\dontrun{ as_state(\"Kano\") as_lga(\"Michika\") } # }"},{"path":"https://docs.ropensci.org/naijR/reference/lgas_nigeria.html","id":null,"dir":"Reference","previous_headings":"","what":"Local Government Areas of Nigeria — lgas_nigeria","title":"Local Government Areas of Nigeria — lgas_nigeria","text":"dataset containing 774 Local Government Areas Nigeria","code":""},{"path":"https://docs.ropensci.org/naijR/reference/lgas_nigeria.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Local Government Areas of Nigeria — lgas_nigeria","text":"","code":"lgas_nigeria"},{"path":"https://docs.ropensci.org/naijR/reference/lgas_nigeria.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Local Government Areas of Nigeria — lgas_nigeria","text":"dataframe 774 rows 2 columns lga Local Government Area state State Federation gpz Geo-political zone","code":""},{"path":"https://docs.ropensci.org/naijR/reference/map_ng.html","id":null,"dir":"Reference","previous_headings":"","what":"Map of Nigeria — map_ng","title":"Map of Nigeria — map_ng","text":"Maps Federal Republic Nigeria based basic plotting idiom utilised maps:map variants.","code":""},{"path":"https://docs.ropensci.org/naijR/reference/map_ng.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map of Nigeria — map_ng","text":"","code":"map_ng(   region = character(),   data = NULL,   x = NULL,   y = NULL,   breaks = NULL,   categories = NULL,   excluded = NULL,   exclude.fill = NULL,   title = NULL,   caption = NULL,   show.neighbours = FALSE,   show.text = FALSE,   legend.text = NULL,   leg.title,   plot = TRUE,   ... )"},{"path":"https://docs.ropensci.org/naijR/reference/map_ng.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map of Nigeria — map_ng","text":"region character vector regions displayed. States Local Government Areas. data object containing data, principally variables required plot map. x, y Numeric object factor (coercible one). See Details. breaks Numeric. vector length >= 1. single value .e. scalar, denotes expected number breaks. Internally, function attempt compute appropriate category sizes fail -bounds. length >= 3L, expected arithmetic sequence represents category bounds cut (applicable choropleth maps). categories legend choropleth-plotted categories. defined, internally created labels used. excluded Regions excluded choropleth map. exclude.fill Colour-shading used indicate excluded regions. Must vector length excluded. title, caption optional string annotating map. show.neighbours Logical; TRUE display immediate vicinity neighbouring regions/countries. show.text Logical. Whether display labels regions. legend.text Logical (whether show legend) character vector (actual strings legend). latter override whatever provided categories, giving user additional control. leg.title String. legend title. missing, default value acquired data. turn legend title, pass NULL. plot Logical. Turn actual plotting map . ... arguments passed plot","code":""},{"path":"https://docs.ropensci.org/naijR/reference/map_ng.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map of Nigeria — map_ng","text":"object class sf, standard format containing data used draw map thus can used popular R packages visualize spatial data.","code":""},{"path":"https://docs.ropensci.org/naijR/reference/map_ng.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map of Nigeria — map_ng","text":"default value region print State boundaries. data enables extraction data plotting object class data.frame. Columns containing regions (.e. States well supported sub-national jurisdictions) identified. argument also provides context quasiquotation providing x y arguments. x y, arguments supplied, taken point coordinates, x represent longitude y latitude. x supplied, assumed intention user make choropleth map, thus, numeric vector arguments converted factors .e. number classes. Otherwise factors object can coerced factor used. plain plots, col argument works map. choropleth maps, colour provided represents (sequential) colour palette based RColorBrewer::brewer.pal. available colour options can checked getOption(\"choropleth.colours\") can also modified user. default legend unsatisfactory, recommended user sets legend.text argument FALSE; next function call legend enable finer control legend.","code":""},{"path":"https://docs.ropensci.org/naijR/reference/map_ng.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Map of Nigeria — map_ng","text":"adjusting default colour choices choropleth maps, advisable use one sequential palettes. list available palettes, especially advanced use, review RColorBrewer::display.brewer..","code":""},{"path":[]},{"path":"https://docs.ropensci.org/naijR/reference/map_ng.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map of Nigeria — map_ng","text":"","code":"if (FALSE) { # \\dontrun{ map_ng() # Draw a map with default settings map_ng(states(\"sw\")) map_ng(\"Kano\")} # }"},{"path":"https://docs.ropensci.org/naijR/reference/naijR.html","id":null,"dir":"Reference","previous_headings":"","what":"naijR: Operations to Ease Data Analyses Specific to Nigeria — naijR","title":"naijR: Operations to Ease Data Analyses Specific to Nigeria — naijR","text":"naijR package essentially R package Nigeria Nigeria.","code":""},{"path":"https://docs.ropensci.org/naijR/reference/naijR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"naijR: Operations to Ease Data Analyses Specific to Nigeria — naijR","text":"naijR contains number functions facilitate management data sets interest including data cleaning wrangling, well making available number facilities geospatial data visualisation.","code":""},{"path":"https://docs.ropensci.org/naijR/reference/naijR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"naijR: Operations to Ease Data Analyses Specific to Nigeria — naijR","text":"Victor Ordu","code":""},{"path":"https://docs.ropensci.org/naijR/reference/states.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects for Representing the Federal States of Nigeria — states","title":"Objects for Representing the Federal States of Nigeria — states","text":"Objects Representing Federal States Nigeria","code":""},{"path":"https://docs.ropensci.org/naijR/reference/states.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Objects for Representing the Federal States of Nigeria — states","text":"","code":"states(states, gpz = NULL, all = TRUE, warn = TRUE)  is_state(x)  as_state(x)  # S3 method for class 'states' print(x, ...)  # S3 method for class 'states' c(...)  # S3 method for class 'states' x[[i, exact = TRUE]]  # S3 method for class 'states' x[i]  # S3 method for class 'states' na.exclude(object, ...)"},{"path":"https://docs.ropensci.org/naijR/reference/states.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Objects for Representing the Federal States of Nigeria — states","text":"states character vector strings representing one States Nigeria. missing, function return states object containing States. gpz NULL (default) , case insensitively, one following strings: \"nc\", \"ne\", \"nw\", \"se\", \"ss\" \"sw\" (see \"Details\"). logical; whether include Federal Capital Territory (FCT) result. warn logical; issue warning one elements actually States (.e. misspelt). x is_state vector tested. as_state, string representing State shares name one Local Government Areas. ... Arguments used methods. See documentation generic details. , exact See help file ?Extract object object class regions","code":""},{"path":"https://docs.ropensci.org/naijR/reference/states.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Objects for Representing the Federal States of Nigeria — states","text":"States Nigeria whole zones, S3 object class states. is_state returns logical vector.length input. input object even type character, return object unaltered, warning. case as_state, object class states.","code":""},{"path":"https://docs.ropensci.org/naijR/reference/states.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Objects for Representing the Federal States of Nigeria — states","text":"gpz represents geopolitical zone , Nigerian context, national subdivision groups contiguous states bear certain socio-cultural political similarities. Historically, arise sub-national administrative divisions known 'Regions' existed time country's independence. present 6 zones - North-Central, North-East, North-West, South-East,South-South South-West. is_state, element-wise check supplied vector carried . test entire vector return single boolean value, functions base::base::used (see examples).","code":""},{"path":"https://docs.ropensci.org/naijR/reference/states.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Objects for Representing the Federal States of Nigeria — states","text":"is_state throws warning, missing value among elements. works atomic vectors, throwing error case NULL passed . design decision made allow rapid iteration data frames without interruption, since spelling mistakes tend common.","code":""},{"path":"https://docs.ropensci.org/naijR/reference/states.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Objects for Representing the Federal States of Nigeria — states","text":"","code":"states()  # lists names of all States #> States #> ------  #> - Abia #> - Adamawa #> - Akwa Ibom #> - Anambra #> - Bauchi #> - Bayelsa #> - Benue #> - Borno #> - Cross River #> - Delta #> - Ebonyi #> - Edo #> - Ekiti #> - Enugu #> - Federal Capital Territory #> - Gombe #> - Imo #> - Jigawa #> - Kaduna #> - Kano #> - Katsina #> - Kebbi #> - Kogi #> - Kwara #> - Lagos #> - Nasarawa #> - Niger #> - Ogun #> - Ondo #> - Osun #> - Oyo #> - Plateau #> - Rivers #> - Sokoto #> - Taraba #> - Yobe #> - Zamfara  states(gpz = \"se\")  # lists States in South-East zone #> States #> ------  #> - Abia #> - Anambra #> - Ebonyi #> - Enugu #> - Imo  all(is_state(naijR::states())) #> [1] TRUE is_state(c(\"Maryland\", \"Baden-Baden\", \"Plateau\", \"Sussex\")) #> [1] FALSE FALSE  TRUE FALSE  # With coercion kt.st <- states(\"Katsina\")  # Ensure this is a State, not an LGA. kt.lg <- suppressWarnings(as_lga(kt.st)) is_state(kt.st)             # TRUE #> [1] TRUE is_lga(kt.lg)               # TRUE #> [1] TRUE  ## Where there's no ambiguity, it doesn't make sense to coerce ## This kind of operation ends with an error if (FALSE) { # \\dontrun{ as_state(\"Kano\") as_lga(\"Michika\") } # }"},{"path":"https://docs.ropensci.org/naijR/reference/states_nigeria.html","id":null,"dir":"Reference","previous_headings":"","what":"States of Nigeria — states_nigeria","title":"States of Nigeria — states_nigeria","text":"dataset 36 States Federal Capital Territory Nigeia","code":""},{"path":"https://docs.ropensci.org/naijR/reference/states_nigeria.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"States of Nigeria — states_nigeria","text":"","code":"states_nigeria"},{"path":"https://docs.ropensci.org/naijR/reference/states_nigeria.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"States of Nigeria — states_nigeria","text":"data.frame 37 rows 2 columns isocode ISO 3661 Alpha 2 code state Name State Territory gpz Geo-political zone","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"naijr-061","dir":"Changelog","previous_headings":"","what":"naijR 0.6.1","title":"naijR 0.6.1","text":"Added function examples documentation improvements. Increased compression internal data. Reflect new home rOpenSci software repository.","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"naijr-060","dir":"Changelog","previous_headings":"","what":"naijR 0.6.0","title":"naijR 0.6.0","text":"CRAN release: 2023-08-08","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"new-features-0-6-0","dir":"Changelog","previous_headings":"","what":"New Features:","title":"naijR 0.6.0","text":"Added new dataset states_nigeria States Nigeria. Migrated RGDAL-based spatial data; sf package now main dependency. map_ng gained newly documented argument plot, hitherto passed internally maps::map() via .... Added new function disambiguate_lga, takes single-element lgas object handling names Local Government Areas shared separate States. function enables (re)setting State attribute objects; can done interactively, replicated States’ names presented selection users.","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"fixes-0-6-0","dir":"Changelog","previous_headings":"","what":"Fixes:","title":"naijR 0.6.0","text":"Improved accuracy LGA naming light spelling mistakes discovered earlier reference document. Unwanted display dialogs fixing LGA names Windows OS reversed (suggested Laura DeCicco).","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"naijr-052","dir":"Changelog","previous_headings":"","what":"naijR 0.5.2","title":"naijR 0.5.2","text":"CRAN release: 2023-06-14 Quietened verbose warning introduced via soon---retired spatial data packages.","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"naijr-051","dir":"Changelog","previous_headings":"","what":"naijR 0.5.1","title":"naijR 0.5.1","text":"CRAN release: 2022-12-02 nested calls function fix_region, lgas constructor function warn spelling mistakes, turned bit confusing used. earlier versions, warnings persisted even fixes applied. carrying interactive fixes, particularly LGA spellings, familiar intuitive native Windows messaging dialog system used. Works Windows machines; Linux MacOs, usual messaging interaction occurs R console. Control size map labels cex argument (passed maps::map.text internally, via ...). Handle instances term Abuja used State (technically ) signal warning user.","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"naijr-050","dir":"Changelog","previous_headings":"","what":"naijR 0.5.0","title":"naijR 0.5.0","text":"CRAN release: 2022-09-30","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"new-features-0-5-0","dir":"Changelog","previous_headings":"","what":"New features:","title":"naijR 0.5.0","text":"New methods ?InternalGenerics introduced e.g. c(), [, [[, na.exclude, etc.","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"enhancements-0-5-0","dir":"Changelog","previous_headings":"","what":"Enhancements:","title":"naijR 0.5.0","text":"Effectively handle mobile numbers common separators , namely whitespace, ‘-’ ‘.’. Repair mobile numbers poor data entry interchanges zeros (0s) letter O (works upper lower case). Repair mobile numbers now offers optional information users. Allow use factor input creating objects class regions. Added new argument legend.text map_ng using idiom similar one used base::barplot, thanks observations made @VictoriaLatham issue #27. Simplified creation choropleth maps 2-column data frames; one columns vector valid States Local Government Areas, factor something coercible one.","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"bug-fixes-0-5-0","dir":"Changelog","previous_headings":"","what":"Bug fixes:","title":"naijR 0.5.0","text":"map_ng accepted arguments data.frames leading unwieldy errors. now made sure fail early cases","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"deprecated-0-5-0","dir":"Changelog","previous_headings":"","what":"Deprecated:","title":"naijR 0.5.0","text":"Arguments map_ng - leg.x, leg.y, leg.orient marked deprecation next minor release.","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"naijr-044","dir":"Changelog","previous_headings":"","what":"naijR 0.4.4","title":"naijR 0.4.4","text":"CRAN release: 2022-08-30","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"bug-fix-0-4-4","dir":"Changelog","previous_headings":"","what":"Bug fix:","title":"naijR 0.4.4","text":"fix_mobile fails unexpectedly NA supplied argument. causes practical problems , example, encounters column missing values.","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"naijr-043","dir":"Changelog","previous_headings":"","what":"naijR 0.4.3","title":"naijR 0.4.3","text":"CRAN release: 2022-08-08 Addressed build problem related CRAN submission.","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"naijr-042","dir":"Changelog","previous_headings":"","what":"naijR 0.4.2","title":"naijR 0.4.2","text":"Improved type checking mapping functionality better fidelity.","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"naijr-041","dir":"Changelog","previous_headings":"","what":"naijR 0.4.1","title":"naijR 0.4.1","text":"Enable exclusion selected States choropleth map (#27). Cleaner output states lgas objects.","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"naijr-040","dir":"Changelog","previous_headings":"","what":"naijR 0.4.0","title":"naijR 0.4.0","text":"CRAN release: 2022-01-28 Introduce ability ‘manually’ fix names States LGAs. Update documentation new vignette.","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"naijr-034","dir":"Changelog","previous_headings":"","what":"naijR 0.3.4","title":"naijR 0.3.4","text":"CRAN release: 2021-12-06 Fixed package-wide misuse word Nasarawa.","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"naijr-033","dir":"Changelog","previous_headings":"","what":"naijR 0.3.3","title":"naijR 0.3.3","text":"CRAN release: 2021-11-05 Fixed repetitions output multiple LGAs’ spellings corrected.","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"naijr-032","dir":"Changelog","previous_headings":"","what":"naijR 0.3.2","title":"naijR 0.3.2","text":"CRAN release: 2021-10-20 Improved print methods","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"naijr-031","dir":"Changelog","previous_headings":"","what":"naijR 0.3.1","title":"naijR 0.3.1","text":"CRAN release: 2021-09-30 Fixed bug affected proper rendering LGA-level maps States. approach used simply filter entire data requiring State map, reduce name clashes occurred synonyms amongst LGAs /States. Enabled fine-tuning creation lgas objects event argument provided name LGA synonymous ’s State (argument strict).","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"naijr-030","dir":"Changelog","previous_headings":"","what":"naijR 0.3.0","title":"naijR 0.3.0","text":"CRAN release: 2021-09-08 Provide new methods S3 generics head tail work objects inherit class regions. S3 constructors states lgas gain logical argument warn control whether issue warning input string contain actual State/LGA. General improvement formatting output enhance user experience. Fixed bug prevented loading LGAs internal data package attached search path .e. invocation naijR::lgas() producing error.","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"naijr-022","dir":"Changelog","previous_headings":"","what":"naijR 0.2.2","title":"naijR 0.2.2","text":"CRAN release: 2021-04-30 Export S3 generic fix_region.","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"naijr-021","dir":"Changelog","previous_headings":"","what":"naijR 0.2.1","title":"naijR 0.2.1","text":"CRAN release: 2021-04-25 Fixed incorrect URLs, noted CRAN Edits output message","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"naijr-020","dir":"Changelog","previous_headings":"","what":"naijR 0.2.0","title":"naijR 0.2.0","text":"Added new function is_lga, checks object Local Government Areas. Ignore, warning, check is_state object checked type character. Draw maps LGA level","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"naijr-015","dir":"Changelog","previous_headings":"","what":"naijR 0.1.5","title":"naijR 0.1.5","text":"Built new package website.","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"naijr-014","dir":"Changelog","previous_headings":"","what":"naijR 0.1.4","title":"naijR 0.1.4","text":"CRAN release: 2020-08-25 Suppress deprecation warning is_state called internally package function; displayed function called directly.","code":""},{"path":"https://docs.ropensci.org/naijR/news/index.html","id":"naijr-013","dir":"Changelog","previous_headings":"","what":"naijR 0.1.3","title":"naijR 0.1.3","text":"CRAN release: 2020-08-03 Added NEWS.md file track changes package. Recognise abbreviations ‘Federal Capital Territory’ .e. FCT. Disable error-check character type is_state can used effectively functional programming constructs.","code":""}]
